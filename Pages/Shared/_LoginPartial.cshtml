@using FutureFridges.Business.Notifications
@using Microsoft.AspNetCore.Identity
@using FutureFridges.Business.UserManagement

@inject SignInManager<FridgeUser> SignInManager
@inject UserManager<FridgeUser> UserManager
@inject NotificationController NotificationController
@inject IHttpContextAccessor Accessor
@using System.Text.RegularExpressions
@{
    String? path = Accessor.HttpContext.Request.Path.Value;
    var notifRegex = new Regex(@"^\/Notifications(.+)$");
    var accountRegex = new Regex(@"^\/Account(.+)$");

}

@*Display Sign in options if user not signed in*@

@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item pe-4">
        <a asp-page="/Notifications/Notifications">
            <i class="bi bi-bell position-relative d-lg-block @(notifRegex.IsMatch(path) ? "text-secondary": "")" style="font-size: 1.5rem">
                @{
                    int NotificationCount = NotificationController.GetCountByUser(new Guid(UserManager.GetUserId(User)));
                }
                @if (NotificationCount > 0)
                {
                    <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger" style="font-size: 0.6rem">@NotificationCount</span>
                }
            </i>
        </a>
    </li>
    <li class="nav-item">
        <a id="manage" class="nav-link active @(accountRegex.IsMatch(path) ? "fw-bolder": "")" asp-page="/Account/ManageAccount" title="Manage">Welcome @UserManager.GetUserName(User)!</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="" asp-page="/Account/Logout">Logout</a>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link active" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
